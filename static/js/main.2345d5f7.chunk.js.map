{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","ESortType","useState","isReversed","setIsreversed","sortType","setSortType","sortedGoods","goods","sortField","isReversedd","goodsCopy","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getSortedGoods","hiddenButton","className","type","cn","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"uPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,IAGKC,EAHL,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,MAFiC,SAI5BL,KAJ4B,oBAI5BA,EAJ4B,iBAI5BA,MAJ4B,KAsCjC,IAAMM,EA7BN,SACEC,EACAC,EACAC,GAEA,IAAMC,EAAS,YAAOH,GAqBtB,OAnBIH,GACFM,EAAUC,MAAK,SAACC,EAAGC,GACjB,OAAQL,GACN,KAAKR,EAAUc,SACb,OAAOF,EAAEG,cAAcF,GAEzB,KAAKb,EAAUgB,OACb,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QACE,OAAO,MAKXR,GACFC,EAAUQ,UAGLR,EAGWS,CAAerB,EAAiBM,EAAUF,GAOxDkB,EAAelB,GAAcE,EAMnC,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYnB,IAAaJ,EAAUc,WAEvCU,QAAS,kBAAMnB,EAAYL,EAAUc,WANvC,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYnB,IAAaJ,EAAUgB,SAEvCQ,QAAS,kBAAMnB,EAAYL,EAAUgB,SANvC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAnCR,WACErB,GAAc,SAAAsB,GAAI,OAAKA,MA4BnB,qBAWCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAnDU,WAClBnB,EAAY,IACZF,GAAc,IA8CR,sBAUJ,6BACGG,EAAYoB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCnHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2345d5f7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsreversed] = useState(false);\n  const [sortType, setSortType] = useState('');\n\n  enum ESortType {\n    ALPHABET = 'alphabet',\n    LENGTH = 'length',\n  }\n\n  function getSortedGoods(\n    goods: string[],\n    sortField: string,\n    isReversedd: boolean,\n  ) {\n    const goodsCopy = [...goods];\n\n    if (sortType) {\n      goodsCopy.sort((a, b) => {\n        switch (sortField) {\n          case ESortType.ALPHABET:\n            return a.localeCompare(b);\n\n          case ESortType.LENGTH:\n            return a.length - b.length;\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReversedd) {\n      goodsCopy.reverse();\n    }\n\n    return goodsCopy;\n  }\n\n  const sortedGoods = getSortedGoods(goodsFromServer, sortType, isReversed);\n\n  const resetButton = () => {\n    setSortType('');\n    setIsreversed(false);\n  };\n\n  const hiddenButton = isReversed || sortType;\n\n  function toggleReverse() {\n    setIsreversed(prev => !prev);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== ESortType.ALPHABET },\n          )}\n          onClick={() => setSortType(ESortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== ESortType.LENGTH },\n          )}\n          onClick={() => setSortType(ESortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={toggleReverse}\n        >\n          Reverse\n        </button>\n\n        {hiddenButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetButton}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}